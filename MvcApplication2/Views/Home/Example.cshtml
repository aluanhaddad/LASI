@using LASI.Utilities;
@using Newtonsoft.Json.Serialization;
@using MvcApplication2.LexicalElementInfo;
@using Newtonsoft.Json;
@using MvcApplication2.Controllers;


<link rel="stylesheet" href=".\..\scripts\JqueryContextMenu\sunbirst.css" />
<link rel="stylesheet" href=".\..\scripts\JqueryContextMenu\jquery.contextMenu.css" />
<title>@ViewBag.Title</title>
<div>
    <ul id="documentlist" class="documentlist break-after documentselectiontab">

        @foreach (var doc in ViewData["docs"] as IEnumerable<LASI.Core.DocumentStructures.Document>) {
            <li class="documentselectiontab">
                <a href=@("#"+doc.Name)>
                    @doc.Name
                </a>
            </li>
        }
    </ul>
</div>
<br />
<div>
    @foreach (var doc in ViewData["docs"] as IEnumerable<LASI.Core.DocumentStructures.Document>) {
        <div id=@doc.Name class="content-wrapper">

            @{var styleMap = new MvcApplication2.SyntacticStyleMapping();
            var withIds = ContextMenuBuilder.BindClientSideIds(doc.Phrases);
            foreach (var annotatedLexicalElements in from phrase in withIds
                                                     join bare in doc.Phrases on phrase.Element equals bare
                                                     let withMenuData = ContextMenuBuilder.ForLexical(phrase, withIds)
                                                     group withMenuData by bare.Paragraph) {
                <p class="lexical-content-block">
                    @foreach (var e in annotatedLexicalElements) {
                        <span class=@styleMap[e.Lexical].CssClass title="@string.Join("", e.Lexical.Type.Name.Select(c => c.IsUpper() ? " " + c : c.ToString()))" id="@e.Id">
                            @e.Lexical.Text

                            <span id="@("context" + e.Id)">
                            @if (e.Lexical != null && e.Lexical is LASI.Core.IVerbal) {
                                @((e.Lexical as LASI.Core.IVerbal).GetMenuDataForAsync())

                            }

                            </span>

                        </span>


                    }
                </p>}



            }

        </div>
    }
</div>

<div id="verbalmenus">
    <div id="subjectonly" class="menuwrapper">
        <ul class="phrasemenu">
            <li id="subject" class="phrasemenuitem">
                View Subjects
            </li>
        </ul>
    </div>
    <br />
    <br />
    <div id="subjectanddirectobject" class="menuwrapper">
        <ul class="phrasemenu">
            <li id="subjects" class="phrasemenuitem">
                View Subjects
            </li>
            <li><hr /></li>
            <li id="directobjects" class="phrasemenuitem">
                View Direct Objects
            </li>
        </ul>
    </div>
    <br />
    <br />
    <div id="subjectanddirectobjectandindirectobject" class="menuwrapper">
        <ul class="phrasemenu">
            <li id="subjects" class="phrasemenuitem">
                View Subjects
            </li>
            <li><hr /></li>
            <li id="directobjects" class="phrasemenuitem">
                View Direct Objects
            </li>
            <li><hr /></li>
            <li id="indirectbjects" class="phrasemenuitem">
                View Indirect Objects
            </li>
        </ul>
    </div>
</div>





@section scripts{
    @Scripts.Render(@".\..\Scripts\JqueryContextMenu\jquery.contextMenu.js");
    @Scripts.Render(@".\..Scripts\JqueryContextMenu\jquery-1.8.2.min.js");
    @Scripts.Render(@".\..Scripts\JqueryContextMenu\jquery.ui.position.js");
    @Scripts.Render(@".\..\Scripts\app\Example\Example.js");
    @*@Scripts.Render(@".\..\Scripts\app\LexicalContextMenus.js");*@
}


