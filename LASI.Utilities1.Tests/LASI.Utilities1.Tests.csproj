<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{BCD1B55E-5178-4B41-BE6F-24B44C123975}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LASI.Utilities1.Tests</RootNamespace>
    <AssemblyName>LASI.Utilities1.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.ExtendedReflection, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\..\..\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Pex\Microsoft.ExtendedReflection.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Pex.Framework">
      <HintPath>..\..\..\..\..\..\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Pex\Microsoft.Pex.Framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Utilities\LASI.Utilities.csproj">
      <Project>{BC10A8F0-77FF-46D0-9F9A-38E2FDA22D21}</Project>
      <Name>LASI.Utilities</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CharacterExtensionsTest.cs" />
    <Compile Include="CharacterExtensionsTest.EqualsIgnoreCase.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.IsAlphabetic.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.IsConsonant.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.IsLower.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.IsUpper.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.ToLower.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="CharacterExtensionsTest.ToUpper.g.cs">
      <DependentUpon>CharacterExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ComparerFactoryTest.cs" />
    <Compile Include="DictionaryExtensionsTest.cs" />
    <Compile Include="EnumerableExtensionsTest.Append.g.cs">
      <DependentUpon>EnumerableExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="EnumerableExtensionsTest.cs" />
    <Compile Include="EnumerableExtensionsTest.EmptyIfNull.g.cs">
      <DependentUpon>EnumerableExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="EnumerableExtensionsTest.Scan.g.cs">
      <DependentUpon>EnumerableExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Apply02.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Apply03.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Compose.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Compose01.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.cs" />
    <Compile Include="FunctionExtensionsTest.Curry01.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry02.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry03.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry04.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry05.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry06.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry08.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry10.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry11.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry12.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="FunctionExtensionsTest.Curry13.g.cs">
      <DependentUpon>FunctionExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ListExtensionsTest.cs" />
    <Compile Include="ListExtensionsTest.Skip.g.cs">
      <DependentUpon>ListExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ListExtensionsTest.Take.g.cs">
      <DependentUpon>ListExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="PairTest.Create.g.cs">
      <DependentUpon>PairTest.cs</DependentUpon>
    </Compile>
    <Compile Include="PairTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\PexAssemblyInfo.cs" />
    <Compile Include="StringExtensionsTest.cs" />
    <Compile Include="StringExtensionsTest.IsNullOrWhiteSpace.g.cs">
      <DependentUpon>StringExtensionsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="XmlConfigTest.cs" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>