using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;
// <copyright file="ListExtensionsTest.Take.g.cs">Copyright ©  2013</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace LASI.Utilities.Specialized.Enhanced.Linq.List
{
    public partial class ListExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ListExtensionsTest))]
public void Take164()
{
    List<int> list;
    list = this.Take<int>((List<int>)null, int.MinValue);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(0, list.Capacity);
    Assert.AreEqual<int>(0, list.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(ListExtensionsTest))]
public void Take989()
{
    List<int> list;
    List<int> list1;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    list1 = this.Take<int>(list, 0);
    Assert.IsNotNull((object)list1);
    Assert.AreEqual<int>(0, list1.Capacity);
    Assert.AreEqual<int>(0, list1.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(ListExtensionsTest))]
public void Take290()
{
    List<int> list;
    List<int> list1;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    list1 = this.Take<int>(list, 1);
    Assert.IsNotNull((object)list1);
    Assert.AreEqual<int>(0, list1.Capacity);
    Assert.AreEqual<int>(0, list1.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(ListExtensionsTest))]
public void Take969()
{
    List<int> list;
    List<int> list1;
    int[] ints = new int[1];
    list = new List<int>((IEnumerable<int>)ints);
    list1 = this.Take<int>(list, 0);
    Assert.IsNotNull((object)list1);
    Assert.AreEqual<int>(0, list1.Capacity);
    Assert.AreEqual<int>(0, list1.Count);
}
    }
}
