@model LASI.WebApp.Models.DocumentStructures.DocumentSetModel
@{
    ViewBag.Title = "Results";
}
@using LASI.WebApp.Helpers
<header>
    <h2>@ViewBag.Title</h2>
</header>

<div id="main-content">
    <div class="results-pane container container-fluid">
        <ul class="nav nav-tabs" id="results">
            <li class="active">
                <a data-toggle="tab" href="#reconstructeddocuments">
                    Reconstructed Documents
                </a>
            </li>
            <li>
                <a data-toggle="tab" href="#topresults">Top Results</a>
            </li>
            <li>
                <a data-toggle="tab" href="#adddocuments">
                    Add Documents
                </a>
            </li>
        </ul>
        <br />
        <div class="tab-content" id="resultstabs">
            @RenderReconstructedDocumentsPane()

            @RenderDocumentChartsPane()

            @RenderAddAditionalDocumentsPanel()
        </div>

        @await Html.PartialAsync("_LexicalContextMenus")
    </div>
</div>
@helper RenderReconstructedDocumentsPane()
    {
<div class="tab-pane fade in active" id="reconstructeddocuments">
    <ul class="documentselectiontab col-md-3">
        @foreach (var documentModel in Model.DocumentModels)
            {
            <li class="list-group-item">
                <input type="button"
                       class="list-group-item-text btn btn-block btn-primary"
                       data-toggle="modal"
                       data-target=@('#' + documentModel.Title.ToSafeHtmlDomId())
                       value="@documentModel.Title" />
            </li>
        }
    </ul>
</div>
<br />
<div>
    @foreach (var documentModel in Model.DocumentModels)
    {
        @RenderDocumentBodyModel(documentModel)
    }
</div>

    }
@helper RenderDocumentChartsPane()
    {
<div class="tab-pane fade in" id="topresults">

    <ul class="documentselectiontab col-md-3">
        @foreach (var documentModel in Model.DocumentModels)
            {
            <li class="list-group-item">
                <input type="button"
                       class="list-group-item-text btn btn-block btn-primary"
                       data-toggle="modal"
                       data-target="@('#' + documentModel.Title.ToSafeHtmlDomId() + "_topresults")"
                       value="@documentModel.Title" />

            </li>
        }
    </ul>
    @foreach (var documentModel in Model.DocumentModels)
    {
        @RenderTopResultsChartData(documentModel, ViewBag.Charts as System.Collections.IDictionary)
    }

</div>
    }
@helper RenderAddAditionalDocumentsPanel()
    {
<div id="adddocuments" class="tab-pane fade in">
    <h1>Add documents</h1>
    @Html.Partial("_DocumentUpload", new LASI.WebApp.Models.DocumentUploadModel { UploadTarget = "fileuploadtarget" })
</div>
    }


@helper RenderDocumentBodyContent(LASI.WebApp.Models.DocumentStructures.DocumentModel documentModel)
    { <div class="document">
    @foreach (var paragraphModel in documentModel.ParagraphModels)
    {
        @Html.Partial("_Paragraph", paragraphModel)
    }
</div>
    }

@helper RenderDocumentBodyModel(LASI.WebApp.Models.DocumentStructures.DocumentModel documentModel)
    {
@Modal(
                renderModalBody: () => RenderDocumentBodyContent(documentModel),
                dialogId: documentModel.Title.ToSafeHtmlDomId(),
                footerText: documentModel.Title,
                title: documentModel.Title
            )
    }
@helper RenderTopResultsChartData(LASI.WebApp.Models.DocumentStructures.DocumentModel documentModel, System.Collections.IDictionary chartsByDocumentTitle)
    {
@Modal(
                renderModalBody: () => RenderDocumentTopResultsModalBody(documentModel, chartsByDocumentTitle),
                dialogId: documentModel.Title.ToSafeHtmlDomId() + "_topresults",
                footerText: documentModel.Title,
                title: documentModel.Title
            )
    }


@helper RenderDocumentTopResultsModalBody(LASI.WebApp.Models.DocumentStructures.DocumentModel documentModel, System.Collections.IDictionary chartsByDocumentTitle)
    {
<div class="container chart-container" id=@(documentModel.Title.ToSafeHtmlDomId() + "_resultschart" )>
    <span id=@(documentModel.Title.ToSafeHtmlDomId() + "_topresultrows") hidden>
        <!-- Render the chart data which will be JSON encoded as an array of arrays -->
        @chartsByDocumentTitle[documentModel.Title]
    </span>
</div>
    }

@helper Modal(string dialogId, string title, string footerText, Func<microsoft.aspnet.mvc.razor.helperresult>
    renderModalBody)
    {

    <div id="@(dialogId)"
         class="modal fade"
         tabindex="-1"
         role="dialog"
         aria-labelledby="#myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">@title</h4>
                </div>
                <div class="modal-body">
                    <div>
                        @renderModalBody()
                    </div>
                </div><div class="modal-footer">@footerText</div>
            </div>
        </div>
    </div>
    }
