@{
    ViewBag.Title = "Create Account";
}

@Styles.Render("~/Content/App/Account/Create.css")
@{
    Response.OutputCache(60);
}
<div class="col-md-12 container-fluid">
    @using LASI.WebApp.Models;

    @using (Html.BeginForm("Create", "Account", FormMethod.Post, new
    {
        @class = "form-horizontal",
        autocomplete = "off",
    })) {
        @model AccountModel
        <fieldset class=" col-md-4 create-account-form">
            <h2 class="form-horizontal-heading">Create account</h2>
            @InputField(m => m.FirstName)
            <!-- Text input-->
            @InputField(m => m.LastName)
            @InputField(m => m.Organization)
            <!-- Email input-->
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-5 control-label" })
                <div class="col-md-7 col-md-offset-0">
                    @Html.TextBoxFor(m => m.Email, new
               {
                   @class = "form-control input-md",
                   type = "email",
                   required = true,
                   autocomplete = "off"
               })
                </div>
            </div>
            <!-- Password input-->
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-5 control-label" })
                <div class="col-md-7 col-md-offset-0">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control input-md", type = "password", required = true, autocomplete = "off" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-5 control-label" })
                <div class="col-md-7 col-md-offset-0">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-md", type = "password", required = true, autocomplete = "off" })
                </div>
            </div>
            <!-- Button (Double) -->
            <div class="form-group">
                <label class="col-md-5 control-label" for="Submit"></label>
                <div class="col-md-5">
                    <button id="Submit" type="submit" name="Submit" class="btn btn-primary">Submit</button>
                    <button id="Reset" name="Reset" type="reset" class="btn btn-default">Reset</button>
                </div>
            </div>

        </fieldset>
    }
</div>
@helper InputField(System.Linq.Expressions.Expression<Func<AccountModel, dynamic>> propertySelector) {
    <div class="form-group">
        @Html.LabelFor(propertySelector, new { @class = "col-md-5 control-label" })
        <div class="col-md-7 col-md-offset-0">
            @Html.TextBoxFor(propertySelector, new { @class = "form-control input-md", type = "text" })
        </div>
    </div>
}