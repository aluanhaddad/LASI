@using LASI;
@using LASI.Core;
@using LASI.Core.DocumentStructures;
@using LASI.WebApp;
@using Newtonsoft.Json;

@Styles.Render("~/Content/App/Home/Results.css")
<!--Load the AJAX API-->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

<title>@ViewBag.Title</title>

<div class="results-pane">
    <ul class="nav nav-tabs" id="results">
        <li class="active"><a data-toggle="tab" href="#reconstructeddocuments">Reconstructed Documents</a></li>
        <li><a data-toggle="tab" href="#topresults">Top Results</a></li>
        <li><a data-toggle="tab" href="#adddocuments">Add Documents</a></li>
    </ul>
    <div class="tab-content" id="resultstabs">
        <div class="tab-pane fade in active" id="reconstructeddocuments">
            <div>

                <ul id="documentlist" class="list-group documentselectiontab col-md-3">
                    @foreach (var doc in ViewData["docs"] as IEnumerable<Document>) {
                        <li class="list-group-item">
                            <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target=@('#'+doc.Name)>
                                @doc.Name
                            </button>
                        </li>
                    }
                </ul>
            </div>

            <br />
            <div>
                @{
                    Phrase.VerboseOutput = true;
                }
                @foreach (var doc in ViewData["docs"] as IEnumerable<Document>) {
                    var pages = doc.Paginate(80, 30);
                    <div id=@doc.Name class="modal fade document-modal-lg" tabindex="-1" role="dialog" aria-labelledby="#myModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <h4 class="modal-title" id="document-title">@doc.Name</h4>
                                </div>
                                <div class="modal-body">
                                    @{
                    var styleMap = new SyntacticStyleMap();
                    var withIds = doc.Phrases.Select(p => new { Phrase = p, Id = p.GetSerializationId() });

                    foreach (var paragraphData in from ided in withIds group ided by ided.Phrase.Paragraph) {
                        <p class="lexical-content-block">
                            @foreach (var e in paragraphData) {
                                <span class="@styleMap[e.Phrase].CssClass"
                                      title='@(e.Phrase.ToString()
                                                              .SplitRemoveEmpty('\n', '\r')
                                                              .Format(Tuple.Create(' ', ' ', ' '), s => s + "\n"))' id="@e.Id">
                                    @e.Phrase.Text
                                    <span id="@("context" + e.Id)" hidden="hidden">
                                        @if (e.Phrase is IVerbal) {
                                            @((e.Phrase as IVerbal).GetJsonMenuData())

                                        }

                                    </span>
                                </span>}
                        </p>}
                                    }

                                </div>

                            </div>
                        </div>
                    </div>
                }
                <div id="verbalContextMenu" class="dropdown clearfix" hidden>
                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu" style="display:block;position:static;margin-bottom:5px;">
                        <li class="view-subects-menu-item"><a href="#">View Subjects</a></li>
                        <li class="view-directobjects-menu-item"><a href="#">View Direct Objects</a></li>
                        <li class="view-indirectobjects-menu-item"><a href="#">View Indirect Objects</a></li>
                    </ul>
                </div>
            </div>

        </div>
        <div class="tab-pane fade" id="topresults">
            <ul id="documentlist" class="list-group documentselectiontab col-md-3">
                @foreach (var doc in ViewData["docs"] as IEnumerable<Document>) {
                    <li class="list-group-item">
                        <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target=@('#'+doc.Name+"_topresults")>
                            @doc.Name
                        </button>
                    </li>
                }
            </ul>
            @foreach (var doc in ViewData["docs"] as IEnumerable<Document>) {
                <div id=@(doc.Name+"_topresults") class="modal fade top-results-modal" tabindex="-1" role="dialog" aria-labelledby="#topResultsModal" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                <h4 class="modal-title" id="document-title">@doc.Name</h4>

                            </div>
                            <div class="modal-body">

                                <div class="container chart-container" id=@(doc.Name+"_resultschart")>
                                    <span id=@(doc.Name+"_topresultrows") hidden>
                                        @((ViewData["charts"] as IDictionary<Document, string>)[doc])
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="tab-pane fade" id="adddocuments">
            <div class="container add-document-container">
                <h1>Add documents</h1>
                <div id="main-content">
                    <div class="progress">
                        <div id="progress1" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%; max-width:100%;">

                        </div>
                    </div>

                    <div>
                        @using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) {
                            @FileUpload.GetHtml(name: "upload1", initialNumberOfFiles: 1, includeFormTag: false, addText: "add a file", uploadText: "upload")
                            <input type="submit" name="submit" value="upload" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
@section scripts{

    <!--I can confirm that these Unix Style filepaths work, and are less confusing to deal with. For consistency, I vote we use them to specify these kind of paths.-->
    <!--aggreed-->
    @Scripts.Render("~/Scripts/App/Home/Results.js")
    @Scripts.Render("~/Scripts/App/Home/Index.js")
}


